/* Generated by the Nim Compiler v0.19.0 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI15346 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3918 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3912 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI119015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI119037 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI119036 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NNI119015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI138, name: "Field1", sons: null}]};
NTI119015.node = NNI119015;
NTI119037.base = NTI119015;
NTI119036.base = NTI119037;
var NNI3858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3858.node = NNI3858;
var NNI3828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3828.node = NNI3828;
NTI3912.base = NTI3826;
NTI3918.base = NTI3826;
var NNI3826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3912, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raise_id", len: 0, typ: NTI114, name: "raise_id", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3918, name: "up", sons: null}]};
NTI3826.node = NNI3826;
var NNI3808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3808.node = NNI3808;
NTI3826.base = NTI3808;
NTI3828.base = NTI3826;
NTI3858.base = NTI3828;
var NNI15346 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI15346.node = NNI15346;
var NNI3846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3846.node = NNI3846;
var NNI3842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3842.node = NNI3842;
NTI3842.base = NTI3828;
NTI3846.base = NTI3842;
var NNI3850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3850.node = NNI3850;
NTI3850.base = NTI3828;

function makeNimstrLit(c_16225) {
		  var ln = c_16225.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_16225.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_17230, src_17231, ti_17232) {
	var result_17655 = null;

		switch (ti_17232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_17201(ti_17232))) {
			result_17655 = src_17231;
			}
			else {
				result_17655 = [src_17231[0], src_17231[1]];
			}
			
			break;
		case 19:
			      if (dest_17230 === null || dest_17230 === undefined) {
        dest_17230 = {};
      }
      else {
        for (var key in dest_17230) { delete dest_17230[key]; }
      }
      for (var key in src_17231) { dest_17230[key] = src_17231[key]; }
      result_17655 = dest_17230;
    
			break;
		case 18:
		case 17:
			if (!((ti_17232.base == null))) {
			result_17655 = nimCopy(dest_17230, src_17231, ti_17232.base);
			}
			else {
			if ((ti_17232.kind == 17)) {
			result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {m_type: ti_17232} : dest_17230;
			}
			else {
				result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {} : dest_17230;
			}
			}
			nimCopyAux(result_17655, src_17231, ti_17232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_17231 === null) {
        result_17655 = null;
      }
      else {
        if (dest_17230 === null || dest_17230 === undefined) {
          dest_17230 = new Array(src_17231.length);
        }
        else {
          dest_17230.length = src_17231.length;
        }
        result_17655 = dest_17230;
        for (var i = 0; i < src_17231.length; ++i) {
          result_17655[i] = nimCopy(result_17655[i], src_17231[i], ti_17232.base);
        }
      }
    
			break;
		case 28:
			      if (src_17231 !== null) {
        result_17655 = src_17231.slice(0);
      }
    
			break;
		default: 
			result_17655 = src_17231;
			break;
		}

	return result_17655;

}
						var pixel_data_119035 = nimCopy(null, [[{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("S"), Field1: makeNimstrLit("255, 200, 150")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("Y"), Field1: makeNimstrLit("255, 255, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("Y"), Field1: makeNimstrLit("255, 255, 0")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("C"), Field1: makeNimstrLit("255, 0, 0")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("W"), Field1: makeNimstrLit("255, 255, 255")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("O"), Field1: makeNimstrLit("0, 0, 255")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}], [{Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("B"), Field1: makeNimstrLit("100, 50, 0")}, {Field0: makeNimstrLit("_"), Field1: makeNimstrLit("229. 230, 232")}]], NTI119036);

function arrayConstr(len_17716, value_17717, typ_17718) {
		    var result = new Array(len_17716);
    for (var i = 0; i < len_17716; ++i) result[i] = nimCopy(null, value_17717, typ_17718);
    return result;
  

	
}

function cstrToNimstr(c_16242) {
		  var ln = c_16242.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_16242.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_16242.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_16259) {
		  var len = s_16259.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_16259[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_16259[i] < 128)
      asciiPart[i] = fcc(s_16259[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_15818, ename_15819) {
		e_15818.name = ename_15819;
		if ((excHandler == 0)) {
		unhandledException(e_15818);
		}
		
		e_15818.trace = nimCopy(null, raw_write_stack_trace_15655(), NTI138);
		throw e_15818;

	
}

function chckIndx(i_17735, a_17736, b_17737) {
			var Tmp1;

	var result_17738 = 0;

	BeforeRet: do {
			if (!(a_17736 <= i_17735)) Tmp1 = false; else {				Tmp1 = (i_17735 <= b_17737);			}		if (Tmp1) {
		result_17738 = i_17735;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_17738;

}

function addInt(a_16603, b_16604) {
		    var result = a_16603 + b_16604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var nimvm_7173 = false;
var nim_program_result = 0;
var global_raise_hook_13418 = [null];
var local_raise_hook_13423 = [null];
var out_of_mem_hook_13426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }

function is_fat_pointer_17201(ti_17203) {
	var result_17204 = false;

	BeforeRet: do {
		result_17204 = !((ConstSet1[ti_17203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_17204;

}

function nimCopyAux(dest_17235, src_17236, n_17238) {
		switch (n_17238.kind) {
		case 0:
			break;
		case 1:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
    
			break;
		case 2:
			L1: do {
				var i_17628 = 0;
				var colontmp__17630 = 0;
				colontmp__17630 = (n_17238.len - 1);
				var res_17633 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_17633 <= colontmp__17630)) break L3;
							i_17628 = res_17633;
							nimCopyAux(dest_17235, src_17236, n_17238.sons[i_17628]);
							res_17633 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
      for (var i = 0; i < n_17238.sons.length; ++i) {
        nimCopyAux(dest_17235, src_17236, n_17238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_13438(x_13441, x_13441_Idx, y_13442) {
		      if (x_13441[x_13441_Idx] === null) { x_13441[x_13441_Idx] = []; }
      var off = x_13441[x_13441_Idx].length;
      x_13441[x_13441_Idx].length += y_13442.length;
      for (var i = 0; i < y_13442.length; ++i) {
        x_13441[x_13441_Idx][off+i] = y_13442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_15341(f_15343) {
					var Tmp3;

	var result_15344 = [null];

		var it_15352 = f_15343;
		var i_15354 = 0;
		var total_15356 = 0;
		var temp_frames_15363 = arrayConstr(64, {Field0: null, Field1: 0}, NTI15346);
		L1: do {
				L2: while (true) {
					if (!!((it_15352 == null))) Tmp3 = false; else {						Tmp3 = (i_15354 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_15363[i_15354].Field0 = it_15352.procname;
					temp_frames_15363[i_15354].Field1 = it_15352.line;
					i_15354 += 1;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_15352 == null))) break L5;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		result_15344[0] = nimCopy(null, [], NTI138);
		if (!((total_15356 == i_15354))) {
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("(")); } else { result_15344[0] = makeNimstrLit("("); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr(((total_15356 - i_15354))+"")); } else { result_15344[0] = cstrToNimstr(((total_15356 - i_15354))+"").slice(); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_15344[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_15628 = 0;
			var colontmp__15635 = 0;
			colontmp__15635 = (i_15354 - 1);
			var res_15638 = colontmp__15635;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_15638)) break L8;
						j_15628 = res_15638;
						add_13438(result_15344, 0, temp_frames_15363[j_15628].Field0);
						if ((0 < temp_frames_15363[j_15628].Field1)) {
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(", line: ")); } else { result_15344[0] = makeNimstrLit(", line: "); };
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr((temp_frames_15363[j_15628].Field1)+"")); } else { result_15344[0] = cstrToNimstr((temp_frames_15363[j_15628].Field1)+"").slice(); };
						}
						
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("\x0A")); } else { result_15344[0] = makeNimstrLit("\x0A"); };
						res_15638 -= 1;
					}
			} while(false);
		} while(false);

	return result_15344[0];

}

function raw_write_stack_trace_15655() {
	var result_15657 = null;

		if (!((framePtr == null))) {
		result_15657 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A")).concat(aux_write_stack_trace_15341(framePtr)), NTI138);
		}
		else {
			result_15657 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_15657;

}

function unhandledException(e_15719) {
		var buf_15720 = [[]];
		if (!(((e_15719.message != null ? e_15719.message.length : 0) == 0))) {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(e_15719.message); } else { buf_15720[0] = e_15719.message.slice(); };
		}
		else {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit(" [")); } else { buf_15720[0] = makeNimstrLit(" ["); };
		add_13438(buf_15720, 0, e_15719.name);
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("]\x0A")); } else { buf_15720[0] = makeNimstrLit("]\x0A"); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(raw_write_stack_trace_15655()); } else { buf_15720[0] = raw_write_stack_trace_15655().slice(); };
		var cbuf_15801 = toJSStr(buf_15720[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_15801);
  }
  else {
    throw cbuf_15801;
  }
  

	
}

function raiseIndexError() {
		var e_16155 = null;
		e_16155 = {m_type: NTI3858, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16155.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_16155.parent = null;
		raiseException(e_16155, "IndexError");

	
}

function join_119120(a_119125, sep_119127) {
	var result_119128 = null;

		result_119128 = nimCopy(null, [], NTI138);
		L1: do {
			var i_119173 = 0;
			var x_119174 = 0;
			var i_119180 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_119180 < (a_119125 != null ? a_119125.length : 0))) break L3;
						i_119173 = i_119180;
						x_119174 = a_119125[i_119180];
						if ((0 < i_119173)) {
						if (result_119128 != null) { result_119128 = (result_119128).concat(sep_119127); } else { result_119128 = sep_119127.slice(); };
						}
						
						if (result_119128 != null) { result_119128 = (result_119128).concat(cstrToNimstr((x_119174)+"")); } else { result_119128 = cstrToNimstr((x_119174)+"").slice(); };
						i_119180 += 1;
					}
			} while(false);
		} while(false);

	return result_119128;

}

function get_random_value_119085() {
	var result_119087 = 0;

	var F={procname:"pixel_mario.getRandomValue",prev:framePtr,filename:"pixel_mario.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_119087 = Math.floor((Math.random() * 2.5600000000000000e+002));
	framePtr = F.prev;

	return result_119087;

}

function raiseOverflow() {
		var e_16065 = null;
		e_16065 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16065.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_16065.parent = null;
		raiseException(e_16065, "OverflowError");

	
}

function sys_fatal_20437(message_20443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"..\\..\\..\\msys64\\mingw64\\lib\\nim\\system.nim",line:0};
	framePtr = F;
		F.line = 2827;
		var e_20445 = null;
		F.line = 2828;
		e_20445 = {m_type: NTI3850, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2829;
		e_20445.message = nimCopy(null, message_20443, NTI138);
		F.line = 2830;
		raiseException(e_20445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_20432(msg_20434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"..\\..\\..\\msys64\\mingw64\\lib\\nim\\system.nim",line:0};
	framePtr = F;
		F.line = 3783;
		sys_fatal_20437(msg_20434);
	framePtr = F.prev;

	
}

function failed_assert_impl_20481(msg_20483) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"..\\..\\..\\msys64\\mingw64\\lib\\nim\\system.nim",line:0};
	framePtr = F;
		F.line = 3790;
		raise_assert_20432(msg_20483);
	framePtr = F.prev;

	
}

function on_pixel_click_119112(value_119114, ev_119115) {
	var F={procname:"pixel_mario.onPixelClick",prev:framePtr,filename:"pixel_mario.nim",line:0};
	framePtr = F;
		F.line = 37;
		var new_color_119194 = join_119120([get_random_value_119085(), get_random_value_119085(), get_random_value_119085()], makeNimstrLit(" , "));
		F.line = 38;
		var element_list_119195 = document.querySelectorAll(toJSStr((makeNimstrLit("div[data-value=\'")).concat(value_119114,makeNimstrLit("\']"))));
		L1: do {
			F.line = 39;
			var item_119415 = null;
			F.line = 3822;
			var i_119419 = 0;
			F.line = 3823;
			var l_119421 = (element_list_119195 != null ? element_list_119195.length : 0);
			L2: do {
				F.line = 3824;
					L3: while (true) {
					if (!(i_119419 < l_119421)) break L3;
						F.line = 3825;
						item_119415 = element_list_119195[chckIndx(i_119419, 0, element_list_119195.length+0-1)-0];
						F.line = 40;
						item_119415.style.backgroundColor = toJSStr((makeNimstrLit("rgb(")).concat(new_color_119194,makeNimstrLit(")")));
						F.line = 3826;
						i_119419 = addInt(i_119419, 1);
						if (!(((element_list_119195 != null ? element_list_119195.length : 0) == l_119421))) {
						F.line = 3827;
						failed_assert_impl_20481(makeNimstrLit("D:\\msys64\\mingw64\\lib\\nim\\system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function render_pixel_119435(col_data_119437) {

		function HEX3Aanonymous_119441(ev_119443) {
			var F={procname:"renderPixel.:anonymous",prev:framePtr,filename:"pixel_mario.nim",line:0};
			framePtr = F;
				F.line = 51;
				on_pixel_click_119112(value_119440, ev_119443);
			framePtr = F.prev;

			
		}

	var result_119438 = null;

	var F={procname:"pixel_mario.renderPixel",prev:framePtr,filename:"pixel_mario.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		var col_119439 = document.createElement("div");
		F.line = 44;
		var value_119440 = nimCopy(null, col_data_119437.Field0, NTI138);
		F.line = 45;
		col_119439.setAttribute("data-value", toJSStr(value_119440));
		F.line = 46;
		col_119439.style.backgroundColor = toJSStr((makeNimstrLit("rgb(")).concat(col_data_119437.Field1,makeNimstrLit(")")));
		F.line = 47;
		col_119439.style.width = "20px";
		F.line = 48;
		col_119439.style.height = "20px";
		F.line = 49;
		col_119439.style.display = "inline-block";
		F.line = 50;
		col_119439.addEventListener("click", HEX3Aanonymous_119441, false);
		F.line = 53;
		result_119438 = col_119439;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_119438;

}

function render_canvas_119471(root_119473) {
	var F={procname:"pixel_mario.renderCanvas",prev:framePtr,filename:"pixel_mario.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 56;
			var row_data_119534 = [{Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}, {Field0: null, Field1: null}];
			F.line = 2173;
			var i_119604 = 0;
			if ((i_119604 <= 16)) {
			L2: do {
				F.line = 2175;
					L3: while (true) {
					if (!true) break L3;
						F.line = 2176;
						nimCopy(row_data_119534, pixel_data_119035[chckIndx(i_119604, 0, pixel_data_119035.length+0-1)-0], NTI119037);
						F.line = 57;
						var row_119535 = document.createElement("div");
						F.line = 58;
						row_119535.style.height = "20px";
						L4: do {
							F.line = 59;
							var col_data_119596 = {Field0: null, Field1: null};
							F.line = 2173;
							var i_119601 = 0;
							if ((i_119601 <= 13)) {
							L5: do {
								F.line = 2175;
									L6: while (true) {
									if (!true) break L6;
										F.line = 2176;
										nimCopy(col_data_119596, row_data_119534[chckIndx(i_119601, 0, row_data_119534.length+0-1)-0], NTI119015);
										F.line = 60;
										row_119535.appendChild(render_pixel_119435(col_data_119596));
										if ((13 <= i_119601)) {
										F.line = 2177;
										break L5;
										}
										
										F.line = 2178;
										i_119601 = addInt(i_119601, 1);
									}
							} while(false);
							}
							
						} while(false);
						F.line = 61;
						root_119473.appendChild(row_119535);
						if ((16 <= i_119604)) {
						F.line = 2177;
						break L2;
						}
						
						F.line = 2178;
						i_119604 = addInt(i_119604, 1);
					}
			} while(false);
			}
			
		} while(false);
	framePtr = F.prev;

	
}

function main_119618() {
	var F={procname:"pixel_mario.main",prev:framePtr,filename:"pixel_mario.nim",line:0};
	framePtr = F;
		F.line = 64;
		var root_119620 = document.createElement("div");
		F.line = 65;
		root_119620.style.background = "white";
		F.line = 66;
		root_119620.style.minHeight = "100vh";
		F.line = 67;
		render_canvas_119471(root_119620);
		F.line = 68;
		document.body.appendChild(root_119620);
	framePtr = F.prev;

	
}

function on_load_119634(event_119636) {
	var F={procname:"pixel_mario.onLoad",prev:framePtr,filename:"pixel_mario.nim",line:0};
	framePtr = F;
		F.line = 71;
		main_119618();
	framePtr = F.prev;

	
}
window.onload = on_load_119634;
